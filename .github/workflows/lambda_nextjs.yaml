name: Deploy NextJS -- aws-lambda-web-adapter

on:
  workflow_dispatch:
  push:
    branches:
      - prod-frontend
    paths:
      - "frontend-nextjs/**"
  pull_request:
    branches:
      - prod-frontend
    paths:
      - "frontend-nextjs/**"

jobs:
  build_and_deploy:
    name: Build and Deploy Nextjs app
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend-nextjs/
    steps:
      - name: checkout branch
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: "npm"
          cache-dependency-path: ./frontend-nextjs/package-lock.json
      - name: Install deps
        run: npm ci
      - name: Build
        run: npm run build
        env:
          CI: false
          NEXT_PUBLIC_FRONTEND_URL: ${{ secrets.NEXT_PUBLIC_FRONTEND_URL }}
          NEXT_PUBLIC_BACKEND_URL: ${{ secrets.NEXT_PUBLIC_BACKEND_URL }}
          NEXT_PUBLIC_AWS_USER_POOLS_ID: ${{ secrets.NEXT_PUBLIC_AWS_USER_POOLS_ID }}
          NEXT_PUBLIC_CLIENT_ID: ${{ secrets.NEXT_PUBLIC_CLIENT_ID }}
          NEXT_PUBLIC_API_GATEWAY_ENDPOINT_URL: ${{ secrets.NEXT_PUBLIC_API_GATEWAY_ENDPOINT_URL }}
      - name: sync static files to S3
        run: aws s3 sync .next/static/ s3://${{ vars.CDN_NAME }}/_next/static/
        env:
          AWS_REGION: ${{ secrets.REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: package function files
        run: |
          ARTIFACTS_DIR="function"
          cp -r public/. .next/standalone/public
          cp -r .next/standalone/. $ARTIFACTS_DIR
          cp run.sh $ARTIFACTS_DIR
          cd $ARTIFACTS_DIR
      - name: zip package files
        run: zip -r lambda_function_payload.zip .
      - name: deploy files to lambda
        run: aws lambda update-function-code --function-name ${{ vars.FUNC_NAME }} --zip-file fileb://lambda_function_payload.zip
