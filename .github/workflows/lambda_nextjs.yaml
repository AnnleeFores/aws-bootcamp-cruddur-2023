name: Next.js frontend 

on:
  workflow_dispatch:
  push:
    branches:
      - prod-frontend
    paths:
      - "frontend-nextjs/**"
  pull_request:
    branches:
      - prod-frontend
    paths:
      - "frontend-nextjs/**"

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

jobs:
  build_and_deploy:
    name: Build and Deploy Nextjs app
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend-nextjs/
    steps:
      
      - name: checkout branch
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: "npm"
          cache-dependency-path: ./frontend-nextjs/package-lock.json

      - name: Setup Terraform with specified version on the runner
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.1
      
      - name: Install deps
        run: npm ci
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::453188237434:role/GitHub-OIDC-Role-idi8WHkkXyJ2
          role-duration-seconds: 1500 #adjust as needed for your build time
          aws-region: ${{ secrets.REGION }}

      - name: Terraform init
        id: init
        run: terraform -chdir='${{ github.workspace }}/terraform/frontend-nextjs/tf/'  init

      - name: Build & deploy frontend-nextjs
        run: node ${{ github.workspace }}/terraform/frontend-nextjs/packages/deploy/build/deploy.js deploy
        env:
          CI: false
          NEXT_PUBLIC_FRONTEND_URL: ${{ secrets.NEXT_PUBLIC_FRONTEND_URL }}
          NEXT_PUBLIC_BACKEND_URL: ${{ secrets.NEXT_PUBLIC_BACKEND_URL }}
          NEXT_PUBLIC_AWS_USER_POOLS_ID: ${{ secrets.NEXT_PUBLIC_AWS_USER_POOLS_ID }}
          NEXT_PUBLIC_CLIENT_ID: ${{ secrets.NEXT_PUBLIC_CLIENT_ID }}
          NEXT_PUBLIC_API_GATEWAY_ENDPOINT_URL: ${{ secrets.NEXT_PUBLIC_API_GATEWAY_ENDPOINT_URL }}
          TF_VAR_REGION: ${{ secrets.REGION }}
          TF_VAR_DOMAIN_NAME: ${{ secrets.DOMAIN_NAME }}
          TF_VAR_API_GW_CERTIFICATE_ARN: ${{ secrets.API_GW_CERTIFICATE_ARN }}
          TF_VAR_CLOUDFRONT_CERTIFICATE_ARN: ${{ secrets.CLOUDFRONT_CERTIFICATE_ARN }}
          TF_VAR_HOSTED_ZONE_DOMAIN: ${{ secrets.HOSTED_ZONE_DOMAIN }}
          TF_VAR_CDN_DOMAIN: ${{ secrets.CDN_DOMAIN }}
          TF_VAR_PORT: ${{ secrets.PORT }}
          TF_VAR_LAMBDA_FUNCTION_NAME: ${{ secrets.LAMBDA_FUNCTION_NAME }}

